# Architectures

#Transfer Model Parameters
transfer_model.input_shape = (256,256,3)
transfer_model.filters = 8
transfer_model.dense_units = 16
transfer_model.dropout_rate = 0.3

# CNN Model Parameters
cnn.input_shape   = (256,256,3)
cnn.base_filters  = (8,16,32,64,128)
cnn.kernel_size   = (7,5,3,3)
cnn.max_pool_dim  = 3
cnn.strides       = 1
cnn.dropout_rate  = 0.3

#CNN01 Model Parameters
cnn01.input_shape   = (256,256,3)
cnn01.filters       = (8, 16, 16, 32, 32, 64, 64, 128)
cnn01.kernel_size   = (3, 3, 3, 3, 3, 3, 3, 3)
cnn01.pool_size     = 3
cnn01.strides       = (1,1,1,1,1,1,1,1)
cnn01.dropout_rate  = 0.2

#res_cnn Model Parameters
#layers are as given (0, 1, 2, 3, 4, 5, 6, 7)
#res_cnn.input_shape    = (256,256,3)
#res_cnn.filters        = (4, 8, 8, 16, 16, 32, 32)
#res_cnn.kernel_size    = 3
#res_cnn.strides        = (1, 1, 1, 1, 1, 1, 1, 1, 1)
#res_cnn.pool_size      = 3
#res_cnn.dropout_rate   = 0.2
#res_cnn.dropout_blocks = (5,6)
#res_cnn.maxpool_blocks = (2,4,6,7)
#res_cnn.res_blocks     = ((0,2), (2,4), (4,6), (6,7))
#res_cnn.res_blocks     = ((1,2), (3,4), (5,6))
#res_cnn.res_blocks     = ((0,1), (1,2), (2,3), (3,4), (4,5), (5,6), (6,7))

##res_cnn Model Parameters ---- 73-75% test accuracy on bens-clahe, 75%-79% on bens alone both 5000 steps 
##layers are as given (0, 1, 2, 3, 4)
res_cnn.input_shape    = (256,256,3)
res_cnn.filters        = (4, 8, 16, 32)
res_cnn.kernel_size    = 3
res_cnn.strides        = (1, 1, 1, 1)
res_cnn.pool_size      = 3
res_cnn.dropout_rate   = 0.3
res_cnn.dropout_blocks = (2, 4)
res_cnn.maxpool_blocks = (0, 1, 2)
#res_cnn.res_blocks     = ((0,1), (1,2))

# Layers
vgg_block.kernel_size = (3, 3)

# Training
Trainer.total_steps = 100
Trainer.log_interval = 13
Trainer.ckpt_interval = 50
Trainer.learning_rate = 0.001
#Trainer.ckpt_path = '/home/RUS_CIP/st184914/dl-lab-23w-team10/experiments/run_2023-11-28T21-02-09-274977/ckpts'
TransferTrainer.coarse_learning_rate = 0.001
TransferTrainer.fine_learning_rate = 0.00001
TransferTrainer.coarse_num_steps = 200
TransferTrainer.fine_num_steps = 250
TransferTrainer.layers_to_tune = 10

# Input pipeline
load.name = 'idrid'
#load.data_dir = 'C:/Users/Gautham/GIT/dl-lab-23w-team10/datasets/IDRID_dataset'
load.data_dir = '/home/data/IDRID_dataset/'
#load.data_dir = 'A:\\study\\INFOTECH\\SEM_3\\DL-lab\\dl-lab-23w-team10\\datasets\\IDRID_dataset'
preprocess.img_height = 256
preprocess.img_width = 256
prepare.batch_size = 32
prepare.caching = False
prepare.shuffle_buffer = 400
prepare.to_augment = True
apply_randomly.p=0.35

# TF Records
make_tfrecords.data_dir = '/home/data/IDRID_dataset/'
#make_tfrecords.data_dir = 'C:/Users/Gautham/GIT/dl-lab-23w-team10/datasets/IDRID_dataset/'
make_tfrecords.target_dir = './tfrecords_data/'
#make_tfrecords.target_dir = './tfrecords_data_grahams/'
#make_tfrecords.target_dir = './tfrecords_data_grahams_clahe/'
preprocess_image.with_clahe = False
preprocess_image.with_bens = False

#Deep Visu
DeepVisualize.target_dir = './'
#DeepVisualize.chkpt = '/home/RUS_CIP/st184914/dl-lab-23w-team10/experiments/run_2023-11-29T13-41-48-991091/ckpts'
DeepVisualize.layer_name = 'conv2d_150'
DeepVisualize.image_list_train = [5,6,7,8]
DeepVisualize.image_list_test = [1,2,3,4]
GradCam.class_idx = 1

# Evaluation checkpoint path
#evaluate.ckpt_path = #your checkpoint path here

# wandb logging
evaluate.log_wandb = True
Trainer.log_wandb = True
